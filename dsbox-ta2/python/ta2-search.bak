#!/usr/bin/env python

"""
Command Line Interface for running the DSBox TA2 Search
"""

from dsbox_dev_setup import path_setup
path_setup()

import sys
import os
import json
import signal
from dsbox.planner.controller import Controller, Feature
from dsbox.planner.event_handler import PlannerEventHandler

TIMEOUT = 25*60 # Timeout after 25 minutes

DEBUG = 0
LIB_DIRECTORY = os.path.dirname(os.path.realpath(__file__)) + "/library"

def main(argv=None): # IGNORE:C0111
    '''Command line options.'''

    if argv is None:
        argv = sys.argv
    else:
        sys.argv.extend(argv)

    program_name = os.path.basename(sys.argv[0])
    program_shortdesc = __import__('__main__').__doc__.split("\n")[1]
    program_usage = '''%s
USAGE
ta2-search <search_config_file>
''' % program_shortdesc

    if len(sys.argv) < 2:
        print(program_usage)
        exit(1)

    conf_file = sys.argv[1]
    config = {}
    with open(conf_file) as conf_data:
        config = json.load(conf_data)
        conf_data.close()

    if "timeout" in config:
        TIMEOUT = int(config.get("timeout"))*60

    # Start the controller
    controller = Controller(LIB_DIRECTORY)
    controller.initialize_from_config(config)
    controller.load_problem()

    # Setup a signal handler to exit gracefully
    # Either on an interrupt or after a certain time
    def write_results_and_exit(signal, frame):
        controller.write_training_results()
        sys.exit(0)
    signal.signal(signal.SIGINT, write_results_and_exit)
    signal.signal(signal.SIGTERM, write_results_and_exit)
    signal.signal(signal.SIGALRM, write_results_and_exit)
    signal.alarm(TIMEOUT)

    # Load in data
    controller.initialize_training_data_from_config()

    # Start training
    controller.initialize_planners()
    for result in controller.train(PlannerEventHandler()):
        if result == False:
            print("ProblemNotImplemented")
            sys.exit(148)
        pass


if __name__ == "__main__":
    if DEBUG:
        sys.argv.append("-h")
        sys.argv.append("-v")
    sys.exit(main())
